name: Python CI with Poetry

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip
        pip install poetry

    # DO NOT disable virtualenv creation to avoid errors
    # - name: Configure Poetry to not create virtualenv
    #   run: poetry config virtualenvs.create false

    - name: Install dependencies
      run: poetry install --no-interaction --no-ansi

    - name: Run tests with pytest on Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        source $(poetry env info --path)/bin/activate
        pytest -v

    - name: Run tests with pytest on macOS
      if: matrix.os == 'macos-latest'
      run: |
        source $(poetry env info --path)/bin/activate
        pytest -v

    - name: Run tests with pytest on Windows
      if: matrix.os == 'windows-latest'
      shell: powershell
      run: |
        . $(poetry env info --path)/Scripts/Activate.ps1
        pytest -v
